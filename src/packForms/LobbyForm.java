package packForms;

import java.awt.HeadlessException;
import java.io.File;
import java.lang.reflect.Method;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.TreeSet;
import javax.swing.BoxLayout;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import packEntities.Buildings.City;
import packEntities.EntityDescriptor;
import packForms.packComponents.PlayerSlot;
import packGame.Session;
import packMap.Hex;
import packMap.fileOperations;
import packPlayer.LogTypes.logEntry;
import packPlayer.Player;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author user
 */
public class LobbyForm extends BaseForm {

    /**
     * Creates new form LobbyForm
     */
    JPanel mainPanel = new JPanel();
    LinkedHashSet<PlayerSlot> slots = new LinkedHashSet<>();
    Hex[][] map;
    public LobbyForm() {
        super();
        Init();
    }

    public LobbyForm(JFrame prev) throws HeadlessException {
        super(prev);
        Init();
    }
    
    private void Init()
    {
        initComponents();
        InitFileChooser();
        
        hexMap.setHexSide(10);
        
        jPlayerList.getViewport().add(mainPanel);
        mainPanel.setEnabled(true);
        mainPanel.setVisible(true);
        mainPanel.setLayout(new BoxLayout(mainPanel, BoxLayout.Y_AXIS));
        
        CheckPlayerStatus();
    }
    private void InitFileChooser()
    {
        //set default directory to one where this program was launched
        File home = new File(System.getProperty("user.dir") + "/maps");
        if(! home.exists()) home.mkdir();
        jFileChooserLoadMap.setCurrentDirectory(home);
        //set filter
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Map files", "map");
        jFileChooserLoadMap.setFileFilter(filter);
        
        home = new File(System.getProperty("user.dir") + "/raports");
        if(! home.exists()) home.mkdir();
        jFileChooserLoadRaport.setCurrentDirectory(home);
        //set filter
        filter = new FileNameExtensionFilter("Raport files", "rap");
        jFileChooserLoadRaport.setFileFilter(filter);
    }
    public void CheckPlayerStatus()
    {
        if(slots.size() <=0)
        {
            jbtnStart.setEnabled(false);
            return;
        }
        for(PlayerSlot i : slots)
        {
            if(!i.getStatus())
            {
                jbtnStart.setEnabled(false);
                return;
            }
        }
        jbtnStart.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooserLoadMap = new javax.swing.JFileChooser();
        jFileChooserLoadRaport = new javax.swing.JFileChooser();
        jSplitPane3 = new javax.swing.JSplitPane();
        jSplitPane1 = new javax.swing.JSplitPane();
        jSplitPane2 = new javax.swing.JSplitPane();
        hexMap = new packMap.HexagonalMap();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSpinnerResources = new javax.swing.JSpinner();
        jSpinnerRoundTimeout = new javax.swing.JSpinner();
        jPlayerList = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jbtnLoadMatch = new javax.swing.JButton();
        jbtnStart = new javax.swing.JButton();
        jbtnExit = new javax.swing.JButton();
        jbtnLoadMap = new javax.swing.JButton();

        jFileChooserLoadMap.setAcceptAllFileFilterUsed(false);

        jFileChooserLoadRaport.setAcceptAllFileFilterUsed(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSplitPane3.setDividerLocation(250);
        jSplitPane3.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane3.setEnabled(false);
        jSplitPane3.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
                jSplitPane3AncestorResized(evt);
            }
        });

        jSplitPane1.setDividerLocation(300);
        jSplitPane1.setEnabled(false);

        jSplitPane2.setDividerLocation(120);
        jSplitPane2.setDividerSize(2);
        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane2.setEnabled(false);
        jSplitPane2.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
                jSplitPane2AncestorResized(evt);
            }
        });

        javax.swing.GroupLayout hexMapLayout = new javax.swing.GroupLayout(hexMap);
        hexMap.setLayout(hexMapLayout);
        hexMapLayout.setHorizontalGroup(
            hexMapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 177, Short.MAX_VALUE)
        );
        hexMapLayout.setVerticalGroup(
            hexMapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jSplitPane2.setTopComponent(hexMap);

        jLabel1.setText("Starting Resources");

        jLabel2.setText("How long a round (in seconds)");

        jSpinnerResources.setModel(new javax.swing.SpinnerNumberModel(50, 50, null, 1));

        jSpinnerRoundTimeout.setModel(new javax.swing.SpinnerNumberModel(10, 10, null, 1));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSpinnerResources)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 12, Short.MAX_VALUE))
                    .addComponent(jSpinnerRoundTimeout))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSpinnerResources, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSpinnerRoundTimeout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jSplitPane2.setRightComponent(jPanel2);

        jSplitPane1.setRightComponent(jSplitPane2);
        jSplitPane1.setLeftComponent(jPlayerList);

        jSplitPane3.setTopComponent(jSplitPane1);

        jbtnLoadMatch.setText("Load match");
        jbtnLoadMatch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnLoadMatchActionPerformed(evt);
            }
        });

        jbtnStart.setText("Start");
        jbtnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnStartActionPerformed(evt);
            }
        });

        jbtnExit.setText("Exit to Main Menu");
        jbtnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnExitActionPerformed(evt);
            }
        });

        jbtnLoadMap.setText("Load Map");
        jbtnLoadMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnLoadMapActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbtnStart)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnLoadMatch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                .addComponent(jbtnLoadMap)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnExit)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnStart)
                    .addComponent(jbtnLoadMatch)
                    .addComponent(jbtnExit)
                    .addComponent(jbtnLoadMap))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSplitPane3.setRightComponent(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane3)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PostGameReport(TreeSet<logEntry> report)
    {
        /*JScrollPane pane = new JScrollPane();
        JList<logEntry> list = new JList<>();
        pane.getViewport().add(list);
        DefaultListModel<logEntry> model = new DefaultListModel<>();
        model.addAll(report);
        list.setModel(model);
        list.setVisible(true);
        JOptionPane.showMessageDialog(null, pane);*/
        Replace(new RaportForm(report,this));
    }
    private void jbtnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnStartActionPerformed
        LinkedHashSet<Object> codes = new LinkedHashSet<>();
        for(PlayerSlot i : slots)
        {
            Object clazz = i.getCompiledCode();
            i.getPlayer().setResources((int)jSpinnerResources.getValue());
            try
            {
                Method tmp = clazz.getClass().getMethod("setMap",Hex[][].class, String.class);
                tmp.invoke(clazz, map, "UshallNotpass");
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,
                        "Something went wrong with starting the compiled code of "+i.getPlayer().getPlayerName(),
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
            codes.add(clazz);
        }
        Session session = new Session((int)jSpinnerRoundTimeout.getValue(), slots, codes);
        session.run();
        PostGameReport(session.getRaport());
        /*
        JDialog progress = new JDialog(this,"Please wait....",true);
        JLabel pgLabel = new JLabel("Working....");
        JProgressBar pgBar = new JProgressBar(0, 100);
        
        progress.add(BorderLayout.NORTH, pgLabel);
        progress.add(BorderLayout.CENTER, pgBar);
        progress.setDefaultCloseOperation(JDialog.DO_NOTHING_ON_CLOSE);
        progress.setSize(400,100);
        
        SwingWorker<Void, Void> sw = new SwingWorker<Void, Void>() {
            @Override
            protected Void doInBackground() throws Exception {
                session.run();
                return null;
            }

            @Override
            protected void done() {
                progress.dispose();
                PostGameReport(session.getRaport());
            }
        };
        sw.execute();
        progress.setVisible(true);
        */
    }//GEN-LAST:event_jbtnStartActionPerformed

    private void jbtnLoadMatchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnLoadMatchActionPerformed
        int result = jFileChooserLoadRaport.showOpenDialog(null);
        if(result != JFileChooser.APPROVE_OPTION) return;
        File targetFile = jFileChooserLoadRaport.getSelectedFile();
        //check if file exists, if it do, can program read it?
        if (!(targetFile.exists() && targetFile.canRead())) return;
        TreeSet<logEntry> report = fileOperations.LoadRaport(targetFile);
        
        PostGameReport(report);
    }//GEN-LAST:event_jbtnLoadMatchActionPerformed

    private void ResetPlayers()
    {
        map = hexMap.getMap();
        if(map != null && map.length>0)
        {
            mainPanel.removeAll();
            slots.clear();
            HashMap<Integer , PlayerSlot> players = new HashMap<>();
            players.clear();
            for(Hex[] i : map)
            {
                for(Hex j : i)
                {
                    EntityDescriptor[] entities = j.getEntities();
                    if(entities == null || entities.length <= 0) continue;
                    for(EntityDescriptor entity : j.getEntities())
                    {
                        entity.setHex(j, "UshallNotpass");
                        //players.addElement( entity.getPlayer("UshallNotpass"));
                        PlayerSlot tmp = new PlayerSlot(this);
                        //slots.add(tmp);
                        Player player = entity.getPlayer("UshallNotpass");
                        if(player == null) return;
                        players.put(player.getID(), tmp); // sort by player ID
                        tmp.setHq((City)entity.getEntity("UshallNotpass"));
                        tmp.setPlayer(player);
                        tmp.setEnabled(true);
                        tmp.setVisible(true);
                    }
                }
            }
            for(int i : players.keySet())
            {
                //go through sorted players and add them to appopriate places
                slots.add(players.get(i));
                mainPanel.add(players.get(i));
            }
            jPlayerList.validate();
            jPlayerList.repaint();
        }
    }
    private void jbtnLoadMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnLoadMapActionPerformed
        int result = jFileChooserLoadMap.showOpenDialog(null);
        if(result != JFileChooser.APPROVE_OPTION) return;
        File targetFile = jFileChooserLoadMap.getSelectedFile();
        //check if file exists, if it do, can program read it?
        if (!(targetFile.exists() && targetFile.canRead())) return;
        Hex[][] map = packMap.fileOperations.Load(jFileChooserLoadMap.getSelectedFile());
        hexMap.setMap(map);
        ResetPlayers();
    }//GEN-LAST:event_jbtnLoadMapActionPerformed

    private void jbtnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnExitActionPerformed
        Back();
    }//GEN-LAST:event_jbtnExitActionPerformed

    private void jSplitPane2AncestorResized(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jSplitPane2AncestorResized
        jSplitPane2.setDividerLocation(0.5); // when form is resized, set divider location to 50% panel's height
    }//GEN-LAST:event_jSplitPane2AncestorResized

    private void jSplitPane3AncestorResized(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jSplitPane3AncestorResized
        jSplitPane3.setDividerLocation(0.85); // when form is resized, set divider location to 85% panel's height
    }//GEN-LAST:event_jSplitPane3AncestorResized

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LobbyForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LobbyForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LobbyForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LobbyForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LobbyForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private packMap.HexagonalMap hexMap;
    private javax.swing.JFileChooser jFileChooserLoadMap;
    private javax.swing.JFileChooser jFileChooserLoadRaport;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jPlayerList;
    private javax.swing.JSpinner jSpinnerResources;
    private javax.swing.JSpinner jSpinnerRoundTimeout;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JSplitPane jSplitPane3;
    private javax.swing.JButton jbtnExit;
    private javax.swing.JButton jbtnLoadMap;
    private javax.swing.JButton jbtnLoadMatch;
    private javax.swing.JButton jbtnStart;
    // End of variables declaration//GEN-END:variables
}
